const std = @import("std");
const elf = @import("../elf.zig");
const PowerPc = @This();

pub const Arch = struct {
    pub const Flags = enum(u64) {
        emb = elf.EF_PPC_EMB,
        relocatable = elf.EF_PPC_RELOCATABLE,
        relocatable_lib = elf.EF_PPC_RELOCATABLE_LIB,
        _,
    };
};

pub const OptionFlags = enum(u32) {
    tls = elf.PPC_OPT_TLS,
    _,
};

pub const NoteType = enum(u16) {
    dexcr = elf.NT_PPC_DEXCR,
    dscr = elf.NT_PPC_DSCR,
    ebb = elf.NT_PPC_EBB,
    hashkeyr = elf.NT_PPC_HASHKEYR,
    pkey = elf.NT_PPC_PKEY,
    pmu = elf.NT_PPC_PMU,
    ppr = elf.NT_PPC_PPR,
    spe = elf.NT_PPC_SPE,
    tar = elf.NT_PPC_TAR,
    tm_cdscr = elf.NT_PPC_TM_CDSCR,
    tm_cfpr = elf.NT_PPC_TM_CFPR,
    tm_cgpr = elf.NT_PPC_TM_CGPR,
    tm_cppr = elf.NT_PPC_TM_CPPR,
    tm_ctar = elf.NT_PPC_TM_CTAR,
    tm_cvmx = elf.NT_PPC_TM_CVMX,
    tm_cvsx = elf.NT_PPC_TM_CVSX,
    tm_spr = elf.NT_PPC_TM_SPR,
    vmx = elf.NT_PPC_VMX,
    vsx = elf.NT_PPC_VSX,
    _,
};

pub const Relocation = enum(u16) {
    addr14 = elf.R_PPC_ADDR14,
    addr14_brntaken = elf.R_PPC_ADDR14_BRNTAKEN,
    addr14_brtaken = elf.R_PPC_ADDR14_BRTAKEN,
    addr16 = elf.R_PPC_ADDR16,
    addr16_ha = elf.R_PPC_ADDR16_HA,
    addr16_hi = elf.R_PPC_ADDR16_HI,
    addr16_lo = elf.R_PPC_ADDR16_LO,
    addr24 = elf.R_PPC_ADDR24,
    addr32 = elf.R_PPC_ADDR32,
    copy = elf.R_PPC_COPY,
    diab_relsda_ha = elf.R_PPC_DIAB_RELSDA_HA,
    diab_relsda_hi = elf.R_PPC_DIAB_RELSDA_HI,
    diab_relsda_lo = elf.R_PPC_DIAB_RELSDA_LO,
    diab_sda21_ha = elf.R_PPC_DIAB_SDA21_HA,
    diab_sda21_hi = elf.R_PPC_DIAB_SDA21_HI,
    diab_sda21_lo = elf.R_PPC_DIAB_SDA21_LO,
    dtpmod32 = elf.R_PPC_DTPMOD32,
    dtprel16 = elf.R_PPC_DTPREL16,
    dtprel16_ha = elf.R_PPC_DTPREL16_HA,
    dtprel16_hi = elf.R_PPC_DTPREL16_HI,
    dtprel16_lo = elf.R_PPC_DTPREL16_LO,
    dtprel32 = elf.R_PPC_DTPREL32,
    emb_bit_fld = elf.R_PPC_EMB_BIT_FLD,
    emb_mrkref = elf.R_PPC_EMB_MRKREF,
    emb_naddr16 = elf.R_PPC_EMB_NADDR16,
    emb_naddr16_ha = elf.R_PPC_EMB_NADDR16_HA,
    emb_naddr16_hi = elf.R_PPC_EMB_NADDR16_HI,
    emb_naddr16_lo = elf.R_PPC_EMB_NADDR16_LO,
    emb_naddr32 = elf.R_PPC_EMB_NADDR32,
    emb_relsda = elf.R_PPC_EMB_RELSDA,
    emb_relsec16 = elf.R_PPC_EMB_RELSEC16,
    emb_relst_ha = elf.R_PPC_EMB_RELST_HA,
    emb_relst_hi = elf.R_PPC_EMB_RELST_HI,
    emb_relst_lo = elf.R_PPC_EMB_RELST_LO,
    emb_sda21 = elf.R_PPC_EMB_SDA21,
    emb_sda2i16 = elf.R_PPC_EMB_SDA2I16,
    emb_sda2rel = elf.R_PPC_EMB_SDA2REL,
    emb_sdai16 = elf.R_PPC_EMB_SDAI16,
    glob_dat = elf.R_PPC_GLOB_DAT,
    got16 = elf.R_PPC_GOT16,
    got16_ha = elf.R_PPC_GOT16_HA,
    got16_hi = elf.R_PPC_GOT16_HI,
    got16_lo = elf.R_PPC_GOT16_LO,
    got_dtprel16 = elf.R_PPC_GOT_DTPREL16,
    got_dtprel16_ha = elf.R_PPC_GOT_DTPREL16_HA,
    got_dtprel16_hi = elf.R_PPC_GOT_DTPREL16_HI,
    got_dtprel16_lo = elf.R_PPC_GOT_DTPREL16_LO,
    got_tlsgd16 = elf.R_PPC_GOT_TLSGD16,
    got_tlsgd16_ha = elf.R_PPC_GOT_TLSGD16_HA,
    got_tlsgd16_hi = elf.R_PPC_GOT_TLSGD16_HI,
    got_tlsgd16_lo = elf.R_PPC_GOT_TLSGD16_LO,
    got_tlsld16 = elf.R_PPC_GOT_TLSLD16,
    got_tlsld16_ha = elf.R_PPC_GOT_TLSLD16_HA,
    got_tlsld16_hi = elf.R_PPC_GOT_TLSLD16_HI,
    got_tlsld16_lo = elf.R_PPC_GOT_TLSLD16_LO,
    got_tprel16 = elf.R_PPC_GOT_TPREL16,
    got_tprel16_ha = elf.R_PPC_GOT_TPREL16_HA,
    got_tprel16_hi = elf.R_PPC_GOT_TPREL16_HI,
    got_tprel16_lo = elf.R_PPC_GOT_TPREL16_LO,
    irelative = elf.R_PPC_IRELATIVE,
    jmp_slot = elf.R_PPC_JMP_SLOT,
    local24pc = elf.R_PPC_LOCAL24PC,
    none = elf.R_PPC_NONE,
    plt16_ha = elf.R_PPC_PLT16_HA,
    plt16_hi = elf.R_PPC_PLT16_HI,
    plt16_lo = elf.R_PPC_PLT16_LO,
    plt32 = elf.R_PPC_PLT32,
    pltrel24 = elf.R_PPC_PLTREL24,
    pltrel32 = elf.R_PPC_PLTREL32,
    rel14 = elf.R_PPC_REL14,
    rel14_brntaken = elf.R_PPC_REL14_BRNTAKEN,
    rel14_brtaken = elf.R_PPC_REL14_BRTAKEN,
    rel16 = elf.R_PPC_REL16,
    rel16_ha = elf.R_PPC_REL16_HA,
    rel16_hi = elf.R_PPC_REL16_HI,
    rel16_lo = elf.R_PPC_REL16_LO,
    rel24 = elf.R_PPC_REL24,
    rel32 = elf.R_PPC_REL32,
    relative = elf.R_PPC_RELATIVE,
    sdarel16 = elf.R_PPC_SDAREL16,
    sectoff = elf.R_PPC_SECTOFF,
    sectoff_ha = elf.R_PPC_SECTOFF_HA,
    sectoff_hi = elf.R_PPC_SECTOFF_HI,
    sectoff_lo = elf.R_PPC_SECTOFF_LO,
    tls = elf.R_PPC_TLS,
    tlsgd = elf.R_PPC_TLSGD,
    tlsld = elf.R_PPC_TLSLD,
    toc16 = elf.R_PPC_TOC16,
    tprel16 = elf.R_PPC_TPREL16,
    tprel16_ha = elf.R_PPC_TPREL16_HA,
    tprel16_hi = elf.R_PPC_TPREL16_HI,
    tprel16_lo = elf.R_PPC_TPREL16_LO,
    tprel32 = elf.R_PPC_TPREL32,
    uaddr16 = elf.R_PPC_UADDR16,
    uaddr32 = elf.R_PPC_UADDR32,
};
