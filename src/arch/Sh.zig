const std = @import("std");
const elf = @import("../elf.zig");
const Sh = @This();

pub const Arch = packed struct {
    pub const Flags = enum(u8) {
        sh1 = elf.EF_SH1,
        sh2 = elf.EF_SH2,
        sh2a = elf.EF_SH2A,
        sh2a_nofpu = elf.EF_SH2A_NOFPU,
        sh2a_sh3e = elf.EF_SH2A_SH3E,
        sh2a_sh3_nofpu = elf.EF_SH2A_SH3_NOFPU,
        sh2a_sh4 = elf.EF_SH2A_SH4,
        sh2a_sh4_nofpu = elf.EF_SH2A_SH4_NOFPU,
        sh2e = elf.EF_SH2E,
        sh3 = elf.EF_SH3,
        sh3e = elf.EF_SH3E,
        sh3_dsp = elf.EF_SH3_DSP,
        sh3_nommu = elf.EF_SH3_NOMMU,
        sh4 = elf.EF_SH4,
        sh4a = elf.EF_SH4A,
        sh4al_dsp = elf.EF_SH4AL_DSP,
        sh4a_nofpu = elf.EF_SH4A_NOFPU,
        sh4_nofpu = elf.EF_SH4_NOFPU,
        sh4_nommu_nofpu = elf.EF_SH4_NOMMU_NOFPU,
        sh_dsp = elf.EF_SH_DSP,
        sh_mach_mask = elf.EF_SH_MACH_MASK,
        sh_unknown = elf.EF_SH_UNKNOWN,
        _,
    };
};

pub const Relocation = enum(u16) {
    @"align" = elf.R_SH_ALIGN,
    code = elf.R_SH_CODE,
    copy = elf.R_SH_COPY,
    count = elf.R_SH_COUNT,
    data = elf.R_SH_DATA,
    dir32 = elf.R_SH_DIR32,
    dir8bp = elf.R_SH_DIR8BP,
    dir8l = elf.R_SH_DIR8L,
    dir8w = elf.R_SH_DIR8W,
    dir8wpl = elf.R_SH_DIR8WPL,
    dir8wpn = elf.R_SH_DIR8WPN,
    dir8wpz = elf.R_SH_DIR8WPZ,
    glob_dat = elf.R_SH_GLOB_DAT,
    gnu_vtentry = elf.R_SH_GNU_VTENTRY,
    gnu_vtinherit = elf.R_SH_GNU_VTINHERIT,
    got32 = elf.R_SH_GOT32,
    gotoff = elf.R_SH_GOTOFF,
    gotpc = elf.R_SH_GOTPC,
    ind12w = elf.R_SH_IND12W,
    jmp_slot = elf.R_SH_JMP_SLOT,
    label = elf.R_SH_LABEL,
    none = elf.R_SH_NONE,
    num = elf.R_SH_NUM,
    plt32 = elf.R_SH_PLT32,
    rel32 = elf.R_SH_REL32,
    relative = elf.R_SH_RELATIVE,
    switch16 = elf.R_SH_SWITCH16,
    switch32 = elf.R_SH_SWITCH32,
    switch8 = elf.R_SH_SWITCH8,
    tls_dtpmod32 = elf.R_SH_TLS_DTPMOD32,
    tls_dtpoff32 = elf.R_SH_TLS_DTPOFF32,
    tls_gd_32 = elf.R_SH_TLS_GD_32,
    tls_ie_32 = elf.R_SH_TLS_IE_32,
    tls_ldo_32 = elf.R_SH_TLS_LDO_32,
    tls_ld_32 = elf.R_SH_TLS_LD_32,
    tls_le_32 = elf.R_SH_TLS_LE_32,
    tls_tpoff32 = elf.R_SH_TLS_TPOFF32,
    uses = elf.R_SH_USES,
};
